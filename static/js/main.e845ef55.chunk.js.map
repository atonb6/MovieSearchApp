{"version":3,"sources":["components/Header.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","React","Component","SearchMovies","useState","searching","setSearching","message","setMessage","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","response","json","data","Search","onSubmit","type","name","placeholder","value","onChange","target","fill","stroke","stroke-linecap","d","map","movie","src","Poster","alt","Title","Year","imdbID","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAceA,E,uKAVX,OACE,sBAAKC,UAAU,qDAAf,UACE,sBAAKC,MAAM,oBAAX,UACE,oBAAIA,MAAM,uCAAV,wCAA8E,OACzE,W,GANMC,IAAMC,W,sCCuEZC,MAvEf,WAAyB,IAAD,IACcC,oBAAS,GADvB,mBACbC,EADa,KACFC,EADE,OAEUF,mBAAS,MAFnB,mBAEbG,EAFa,KAEJC,EAFI,OAGMJ,mBAAS,IAHf,mBAGbK,EAHa,KAGNC,EAHM,OAIQN,mBAAS,IAJjB,mBAIbO,EAJa,KAILC,EAJK,KAKdC,EAAY,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DACjBD,EAAEE,iBACFV,GAAa,GACPW,EAHW,sDAG0CR,EAH1C,mCAKUS,MAAMD,GALhB,cAKPE,EALO,gBAMMA,EAASC,OANf,OAMPC,EANO,OAObb,EAAW,MACXI,EAAUS,EAAKC,QACfhB,GAAa,GATA,kDAWbE,EAAW,gCACXF,GAAa,GAZA,0DAAH,sDAgBlB,OACI,sBAAKP,UAAY,yBAAjB,UACI,qBAAKC,MAAQ,oEAAb,SACA,uBAAMA,MAAQ,gGACduB,SAAaV,EADb,UAEA,uBAAOW,KAAO,OACdC,KAAO,QACPC,YAAc,2BACd1B,MAAQ,6EACR2B,MAAUlB,EACVmB,SACI,SAACd,GAAD,OAAOJ,EAASI,EAAEe,OAAOF,UAR7B,IAUG,wBAAQH,KAAO,SAClBxB,MAAQ,2DADL,SAEH,wBAAK8B,KAAO,OACZC,OAAS,eACTC,iBAAiB,SAFjB,oDAGkB,SAHlB,6BAIe,KAJf,wBAKU,aALV,sBAMQ,WANR,yBAOA,sBAAMC,EAAI,8CAAV,gBAPA,WAYJ,sBAAKjC,MAAM,oBAAX,UACCK,IAAcE,EAAY,gDAA4BA,EACvD,sBAAKR,UAAU,UAAf,cAA2BQ,EAA3B,OAAiDI,EAAOuB,KAAI,SAAAC,GAAK,OAC7D,qBAAKnC,MAAM,8BAAX,SACI,sBAAKA,MAAQ,0DAAb,UAEI,qBAAKoC,IAAQD,EAAME,OACnBC,IAAM,aACNtC,MAAQ,gBACR,sBAAKA,MAAQ,MAAb,UACI,oBAAGA,MAAQ,sBAAX,qBAA0C,uBAAMA,MAAQ,uCAAd,cAAyDmC,EAAMI,MAA/D,UAE1C,oBAAGvC,MAAQ,sBAAX,+BAAoD,uBAAMA,MAAQ,wBAAd,cAA0CmC,EAAMK,KAAhD,eAPhDL,EAAMM,aAL1B,W,MCjCOC,MAXf,WACE,OACE,sBAAK3C,UAAU,sBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,cAAC,EAAD,IACA,cAACuB,EAAD,OACK,QCAEqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM5Bb,K","file":"static/js/main.e845ef55.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"relative mx-auto bg-indigo-700 max-w-7xl py-4 px-4\">\r\n        <div class=\"container mx-auto\">\r\n          <h1 class=\"text-white text-center text-3xl pb-4\"> Buscador de Pel√≠culas </h1>{\" \"}\r\n        </div>{\" \"}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\n\r\nfunction SearchMovies() {\r\n    const [searching, setSearching] = useState(false);\r\n    const [message, setMessage] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState([]);\r\n    const searchMovies = async(e) => {\r\n        e.preventDefault();\r\n        setSearching(true);\r\n        const url = `https://www.omdbapi.com/?&apikey=872a863d&s=${query}&type=\"movie\"`;\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setMessage(null);\r\n            setMovies(data.Search);\r\n            setSearching(false);\r\n        } catch (err) {\r\n            setMessage('An unexpected error occured.')\r\n            setSearching(false);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className = \"container mx-auto pt-6\" >\r\n            <div class = \"flex justify-center max-w-screen-sm mx-auto overflow-hidden px-10\" >\r\n            <form class = \"w-full h-10 pl-3 pr-2 bg-white border rounded-full flex justify-between items-center relative\"\r\n            onSubmit = { searchMovies } >\r\n            <input type = \"text\"\r\n            name = \"query\"\r\n            placeholder = \"Search movies by name...\"\r\n            class = \"appearance-none w-full outline-none focus:outline-none active:outline-none\"\r\n            value = { query }\r\n            onChange = {\r\n                (e) => setQuery(e.target.value)\r\n            }\r\n            /> <button type = \"submit\"\r\n            class = \"ml-1 outline-none focus:outline-none active:outline-none\" >\r\n            <svg fill = \"none\"\r\n            stroke = \"currentColor\"\r\n            stroke-linecap = \"round\"\r\n            stroke linejoin = \"round\"\r\n            stroke-width = \"2\"\r\n            viewBox = \"0 0 24 24\"\r\n            class = \"w-6 h-6\" >\r\n            <path d = \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" > </path></svg >\r\n            </button>\r\n            </form>  \r\n        </div>\r\n\r\n        <div class=\"container mx-auto\"> \r\n        {searching && !message ? ( <span> loading... </span>): message ? ( \r\n        <div className=\"message\"> {message} </div > ) : (movies.map(movie => ( \r\n            <div class=\"inline-block px-2 w-64 h-64\" >\r\n                <div class = \"bg-white rounded-lg overflow-hidden shadow-xl my-8 py-4\"\r\n                    key = { movie.imdbID } >\r\n                    <img src = { movie.Poster }\r\n                    alt = \"movieimage\"\r\n                    class = \"w-full h-64\"/>\r\n                    <div class = \"p-4\" >\r\n                        <p class = \"font-medium text-lg\" > Title: <span class = \"font-normal text-base leadin-relaxed\" > { movie.Title } </span>\r\n                        </p >\r\n                        <p class = \"font-medium text-lg\" > Year of Release: <span class = \"font-normal text-base\" > { movie.Year } </span>\r\n                        </p > \r\n                    </div> \r\n                </div> \r\n            </div>\r\n            )))\r\n        } </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchMovies;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport \"./tailwind.css\";\nimport SearchMovies from \"./components/Search\";\nimport Results from \"./components/Results\";\n\nfunction App() {\n  return (\n    <div className=\"relative width-full\">\n      <div className=\"mx-auto overflow-hidden\">\n        <Header />\n        <SearchMovies />\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render( \n    <React.StrictMode>\n    <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}